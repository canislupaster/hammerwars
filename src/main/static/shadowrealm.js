//lmao stolen from https://github.com/ambit-tsai/shadowrealm-api/blob/main/docs/assets/index.ff870cb1.js
const ee=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const u of s.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function r(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerpolicy&&(s.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?s.credentials="include":n.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(n){if(n.ep)return;n.ep=!0;const s=r(n);fetch(n.href,s)}};ee();const M=window,k=Object.defineProperty,H={debug:!1},{log:q,warn:te}=console;function z(e){H.debug&&(q("[DEBUG]"),T(e)?te(e):q(e))}let W;if(M.Reflect)W=Reflect.apply;else{const e=Function.prototype.apply;W=function(t,r,o){return e.call(t,r,o)}}const re=String.prototype.replace;function ne(e,...t){return W(re,e,t)}function T(e){return e?typeof e=="object":!1}let{assign:$,keys:J}=Object;$||($=function(e){const t=arguments;for(let r=1,{length:o}=t;r<o;++r){const n=t[r];if(T(n))for(const s of J(n))e[s]=n[s]}return e});function oe(e,{intrinsics:t},r=!1){if(z(e),r){if(!e._)return new t[e.name](e.message);e=e._}const{TypeError:o}=t,n="Cross-Realm Error: ";return T(e)?new o(n+e.name+": "+e.message):new o(n+e)}function se(e,t,r,o){if(typeof t=="function")try{return ae(e,t,r,o)}catch(n){throw o.wrapError(n,e)}else if(T(t))throw new e.intrinsics.TypeError("need primitive or callable, got "+t);return t}function ae(e,t,r,o){let{length:n,name:s}=t;(typeof n!="number"||n<0)&&(n=0),typeof s!="string"&&(s="");const u=e.intrinsics.Function("params","return "+ie.toString())(arguments);return k(u,"length",{value:n}),k(u,"name",{value:s}),u}function ie(){const[e,t,r,o]=params;let n;try{const s=arguments,u=[];for(let d=0,{length:h}=s;d<h;++d){const y=o.getWrappedValue(r,s[d],e,o);u.push(y)}n=o.apply(t,r.globalObject,u)}catch(s){throw o.wrapError(s,e)}return o.getWrappedValue(e,n,r,o)}const ce=["globalThis","Infinity","NaN","undefined","eval","isFinite","isNaN","parseFloat","parseInt","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","AggregateError","Array","ArrayBuffer","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","Error","EvalError","FinalizationRegistry","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Number","Object","Promise","Proxy","RangeError","ReferenceError","RegExp","Set","SharedArrayBuffer","String","Symbol","SyntaxError","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","Atomics","JSON","Math","Reflect","console"];var le=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",GLOBAL:M,define:k,_:H,log:z,get apply(){return W},replace:ne,isObject:T,get assign(){return $},keys:J,wrapError:oe,getWrappedValue:se,globalReservedProps:ce});function K(e,t){t.define(e.globalObject,"ShadowRealm",{configurable:!0,writable:!0,value:D(e,t)})}function D(e,t){const o=e.intrinsics.eval("("+ue.toString()+")")(e,t);return t.define(o,"__debug",{get:()=>t._.debug,set:n=>t._.debug=n}),o}function ue(e,t){const{Function:r,Promise:o,String:n,Symbol:s,TypeError:u}=e.intrinsics,{apply:d,define:h,dynamicImportPattern:y,dynamicImportReplacer:x,getWrappedValue:b,isObject:p,replace:E,wrapError:P}=t,{toString:v}=r,w=function(){if(!(this instanceof w))throw new u("Constructor requires a new operator");const a=t.createRealmRecord(e,t);h(this,"__realm",{value:a})},{prototype:I}=w,_=!0;h(I,"evaluate",{configurable:_,writable:_,value:l}),h(I,"importValue",{configurable:_,writable:_,value:f}),s&&s.toStringTag&&h(I,s.toStringTag,{configurable:_,value:"ShadowRealm"});function l(i){const a=p(this)?this.__realm:{};if(!a.intrinsics)throw new u("must be called on ShadowRealm object");if(typeof i!="string")throw new u("evaluate expects a string");i=E(i,y,x);let c;try{c=m(i,a)}catch(R){throw P(R,e,_)}return b(e,c,a,t)}function m(i,a){i=E(i,y,x),i=d(v,r(i),[]),i='"use strict";undefined;try'+E(i,/[^{]+/,"")+"catch(e){throw{_:e}}",t.log(i);const{globalObject:c}=a;return c.eval=a.intrinsics,d(a.evalInContext,c,[i])}function f(i,a){const c=p(this)?this.__realm:{};if(!c.intrinsics)throw new u("must be called on ShadowRealm object");if(i=n(i),typeof a!="string")throw new u("bindingName is not string");return new o((R,g)=>{c.globalObject.__import(i).then(C=>{if(!(a in C))throw new u('"'+i+'" has no export named "'+a+'"');const U=b(e,C[a],c,t);R(U)}).catch(C=>{const U=P(C,e);g(U)})})}return w}function fe(e,t){e.intrinsics.eval("("+pe.toString()+")")(e,t)}function pe(e,t){const{globalObject:r,intrinsics:o}=e,{apply:n,define:s,GLOBAL:u}=t,{Array:{prototype:{push:d}},Object:{create:h},Promise:y,Symbol:x}=o,{fetch:b,URL:p}=u,{all:E}=y,{then:P}=y.prototype;let v;const w={};s(r,"__import",{value:_}),s(r,"__from",{value:I}),s(r,"__export",{set:f=>t.assign(v,f)}),s(r,"__default",{set:f=>v.default=f});function I(f,i){const{href:a}=new p(f,i),c=w[a];if(c&&c.exports)return c.exports;throw new o.Error("Module does not exist ("+f+")")}function _(f,i=u.location.href){const{href:a}=new p(f,i);return new y((c,R)=>{const g=w[a];if(g&&g.exports)return c(g.exports);l(a).then(C=>{c(m(a,C))}).catch(R)})}function l(f){let i=w[f];if(i)return i.promise;const a=b(f,{credentials:"same-origin"}).then(c=>{if(c.status===200)return c.text();throw{_:new o.TypeError("Failed to fetch dynamically imported module: "+f)}}).then(c=>{const[R,g]=t.transformEsmSyntax(c),C=[];for(let O=0,{length:F}=g;O<F;++O){const{href:A}=new p(g[O],f);g[O]=A,n(d,C,[l(A)])}const U=n(E,y,[C]);return n(P,U,[O=>{for(let F=0,{length:A}=O;F<A;++F)m(g[F],O[F]);return'var __meta={url:"'+f+'"};'+R}])},c=>{throw c._?c._:new o[c.name](c.message)});return i=w[f]={promise:a},a}function m(f,i){v=h(null),x&&x.toStringTag&&s(v,x.toStringTag,{value:"Module"}),r.eval(i);const a=w[f];return a.exports=v,v=void 0,a.exports}}function de(e,t){const{document:r}=e.intrinsics,o=r.createElement("iframe");return o.name="ShadowRealm",r.head.appendChild(o),o.contentWindow.eval("("+me.toString()+")")(t)}function me(e){const t=window,{Function:r,Object:o,Symbol:n}=t,{getOwnPropertyNames:s}=o,{apply:u,define:d,dynamicImportPattern:h,dynamicImportReplacer:y,replace:x}=e,b={},p={};let E;n&&n.unscopables&&d(p,n.unscopables,{value:o.seal(o.create(null))});for(const l of s(t)){b[l]=t[l];const m=e.globalReservedProps.indexOf(l)!==-1,f=o.getOwnPropertyDescriptor(t,l);l==="eval"?w():m&&d(p,l,f),f.configurable?delete t[l]:f.writable?t[l]=E:m||d(p,l,{value:E})}if(b.EventTarget)for(const l of s(b.EventTarget.prototype))l!=="constructor"&&d(t,l,{value:E});p.globalThis=p,p.Function=_();const P=r("with(this)return eval(arguments[0])"),v={intrinsics:b,globalObject:p,evalInContext:P};return e.defineShadowRealmCtor(v,e),e.addEsModuleHelpers(v,e),v;function w(){let l=!1;const m=I();d(p,"eval",{get(){return l?(l=!1,b.eval):m},set(f){l=f===b}})}function I(){return{eval(l){return l='"use strict";undefined;'+x(l,h,y),e.log(l),p.eval=b,u(P,p,[l])}}.eval}function _(){const{toString:l}=r,m=function(){const i=u(r,null,arguments);let a=u(l,i,[]);a=x(a,h,y),a='with(this)return function(){"use strict";return '+a+"}()",e.log(a);const c=r(a),R=u(c,p,[]);return function(){return u(R,this===t?void 0:this,arguments)}};return m.prototype=r.prototype,m.prototype.constructor=m,m}}const N=[],j=[],Q=/(^|[^.$])(\bimport\s*(\(|\/[/*]))/g,X="$1__$2",ge="\\bexport\\b(\\s+((var|let|const)\\s+([^;]+)|(async\\s+)?function(\\s+|\\s*\\*\\s*)([^\\s(]+)|class\\s+([^\\s{]+)|default\\s+((async\\s+)?function(\\s+|\\s*\\*\\s*)([^\\s(]+)|class\\s+([^\\s{]+)|)?)|\\s*(\\*\\s*(as\\s+(\\S+)\\s+)?from\\s*(\"[^\"]+\"|'[^']+'|`[^`]+`)|{([^}]+)}(\\s*from\\s*(\"[^\"]+\"|'[^']+'|`[^`]+`))?))|\\bimport\\b(\\s*(({([^}]+)}\\s*|\\*\\s*as\\s+(\\S+)\\s+)from\\s*)?|\\s+([^{*\"'`]+)(\\s+from|\\s*,\\s*({([^}]+)}\\s*|\\*\\s*as\\s+(\\S+)\\s+)from)\\s*)(\"[^\"]+\"|'[^']+'|`[^`]+`)",G=/([^\s,]+)\s+as\s+([^\s,]+)/g,he=[{p:RegExp(ge,"g"),r(e,t,r,o,n,s,u,d,h,y,x,b,p,E,P,v,w,I,_,l,m,f,i,a,c,R,g,C,U,O,F,A){if(n){for(const S of n.split(","))S.replace(/^\s*([^\s={}:]+)\s*($|=|})|[:{]\s*([^\s={}:]+)\s*($|=|})/,(L,V,Z,B)=>(j.push(V||B),L));return r}if(d)return"__export={"+d+":"+d+"};"+r;if(h)return j.push(h),r;if(p)return"__default="+p+";"+y;if(E)return j.push(E),r;if(r)return r.replace(/^default/,"__default=");if(I)return N.push(I),w?"__export={"+w+":__from("+I+",__meta.url)}":"__export=__from("+I+",__meta.url)";if(m){N.push(m);const S=[];return _.replace(/([^\s,]+)(\s+as\s+([^\s,]+))?/g,(L,V,Z,B)=>(S.push((B||V)+":m."+V),L)),";(function(){var m=__from("+m+",__meta.url);__export={"+S.join()+"}}())"}if(_){const S=_.replace(G,"$2:$1");return"__export={"+S+"}"}if(A){N.push(A);const S="=__from("+A+",__meta.url)";if(c){const L=c.replace(G,"$1:$2");return"const{"+L+"}"+S}if(R)return"var "+R+S;if(O){const L=O.replace(G,"$1:$2");return"const{"+L+"}"+S+","+g+S+".default"}return F?"var "+F+S+","+g+"="+F+".default":g?"var "+g+S+".default":A}}},{p:/\bimport\.meta\b/g,r:"__meta"},{p:Q,r:X}];function ye(e){for(const{p:r,r:o}of he)e=e.replace(r,o);if(j.length){for(let r=j.length-1;r>=0;--r)j[r]+=":"+j[r];e+=";__export={"+j.join()+"}",j.length=0}const t=[];for(let r=0,{length:o}=N;r<o;++r){const n=N[r];t.push(n.substring(1,n.length-1))}return N.length=0,[e,t]}const Y=$({addEsModuleHelpers:fe,createRealmRecord:de,createShadowRealmCtor:D,defineShadowRealmCtor:K,dynamicImportPattern:Q,dynamicImportReplacer:X,transformEsmSyntax:ye},le);M.ShadowRealm||D({intrinsics:M},Y);M.ShadowRealm||K({intrinsics:M,globalObject:M},Y);